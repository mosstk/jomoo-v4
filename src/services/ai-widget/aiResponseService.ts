import { AIResponse, ProductContext, ProductRecommendation } from './types';
import { SuggestionsService } from './suggestionsService';

export class AIResponseService {
  private static readonly API_KEY_PLACEHOLDER = 'your-openai-api-key';

  static async generateResponse(
    message: string,
    context: ProductContext | null
  ): Promise<AIResponse> {
    try {
      // For demo purposes, return mock responses
      // In production, replace with actual OpenAI API call
      const mockResponse = this.getMockResponse(message, context);
      
      // Simulate API delay
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      return mockResponse;
    } catch (error) {
      console.error('Error generating AI response:', error);
      return {
        content: '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á',
        suggestions: SuggestionsService.getSuggestionsForContext(context).slice(0, 2)
      };
    }
  }

  private static getMockResponse(message: string, context: ProductContext | null): AIResponse {
    const lowerMessage = message.toLowerCase();

    // Product-specific responses
    if (context?.productName === 'Smart Toilet') {
      if (lowerMessage.includes('‡∏£‡∏≤‡∏Ñ‡∏≤')) {
        return {
          content: `Smart Toilet ‡∏Ç‡∏≠‡∏á TOA JOMOO ‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 25,000 - 80,000 ‡∏ö‡∏≤‡∏ó ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏£‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå
          
‡∏£‡∏∏‡πà‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô: 25,000-35,000 ‡∏ö‡∏≤‡∏ó
‡∏£‡∏∏‡πà‡∏ô‡∏Å‡∏•‡∏≤‡∏á: 35,000-55,000 ‡∏ö‡∏≤‡∏ó  
‡∏£‡∏∏‡πà‡∏ô‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°: 55,000-80,000 ‡∏ö‡∏≤‡∏ó

‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 2-5 ‡∏õ‡∏µ`,
          suggestions: SuggestionsService.getFollowUpSuggestions(message, context),
          productRecommendations: this.getSmartToiletRecommendations()
        };
      }
      
      if (lowerMessage.includes('‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå') || lowerMessage.includes('‡∏™‡πÄ‡∏õ‡∏Ñ')) {
        return {
          content: `Smart Toilet TOA JOMOO ‡∏°‡∏µ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô:

üöø ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏≤‡∏á‡∏Å‡πâ‡∏ô-‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ç‡∏¥‡∏á ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏ô‡πâ‡∏≥‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ
üå°Ô∏è ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏≠‡∏∏‡πà‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ ‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÑ‡∏î‡πâ
üí® ‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡∏π‡∏î‡∏Å‡∏•‡∏¥‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πà‡∏≤‡∏•‡∏°‡∏≠‡∏ö‡πÅ‡∏´‡πâ‡∏á
üì± ‡∏£‡∏µ‡πÇ‡∏°‡∏ó‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏ó‡∏£‡∏• ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ú‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ç‡πâ‡∏≤‡∏á
üåô ‡πÑ‡∏ü‡∏™‡πà‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô LED
‚ôªÔ∏è ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏ô‡πâ‡∏≥ ‡∏£‡∏∞‡∏ö‡∏ö Dual Flush
üîß ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥`,
          suggestions: SuggestionsService.getFollowUpSuggestions(message, context)
        };
      }
    }

    if (context?.productName === 'One Piece Toilet') {
      if (lowerMessage.includes('‡∏£‡∏≤‡∏Ñ‡∏≤')) {
        return {
          content: `One Piece Toilet TOA JOMOO ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 8,000 - 25,000 ‡∏ö‡∏≤‡∏ó

‡∏£‡∏∏‡πà‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô: 8,000-12,000 ‡∏ö‡∏≤‡∏ó
‡∏£‡∏∏‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©: 12,000-18,000 ‡∏ö‡∏≤‡∏ó
‡∏£‡∏∏‡πà‡∏ô‡∏î‡∏µ‡∏•‡∏±‡∏Å‡∏ã‡πå: 18,000-25,000 ‡∏ö‡∏≤‡∏ó

‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á (2,000-3,000 ‡∏ö‡∏≤‡∏ó)`,
          suggestions: SuggestionsService.getFollowUpSuggestions(message, context)
        };
      }
    }

    // General responses
    if (lowerMessage.includes('‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô')) {
      return {
        content: `‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ TOA JOMOO:

üõ°Ô∏è ‡∏™‡∏∏‡∏Ç‡∏†‡∏±‡∏ì‡∏ë‡πå: ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 2-5 ‡∏õ‡∏µ
üîß ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤/‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå: ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1-2 ‡∏õ‡∏µ  
üöø ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏õ‡∏≤: ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ

‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°:
‚úÖ ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï
‚úÖ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏°‡∏ü‡∏£‡∏µ
‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏¥‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ü‡∏£‡∏µ (‡∏Å‡∏£‡∏ì‡∏µ‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢)

‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ú‡∏¥‡∏î‡∏ß‡∏¥‡∏ò‡∏µ, ‡∏†‡∏±‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥`,
        suggestions: SuggestionsService.getFollowUpSuggestions(message, context)
      };
    }

    if (lowerMessage.includes('‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á')) {
      return {
        content: `‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á TOA JOMOO:

üë®‚Äçüîß ‡∏ó‡∏µ‡∏°‡∏ä‡πà‡∏≤‡∏á‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
üìÖ ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 3-7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£
‚è∞ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á 2-4 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á (‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)

‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:
üöø Smart Toilet: 3,000-5,000 ‡∏ö‡∏≤‡∏ó
üöΩ One Piece Toilet: 2,000-3,000 ‡∏ö‡∏≤‡∏ó
üöø Basin/Faucet: 1,500-2,500 ‡∏ö‡∏≤‡∏ó

‡∏£‡∏ß‡∏°: ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á, ‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á, ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö`,
        suggestions: SuggestionsService.getFollowUpSuggestions(message, context)
      };
    }

    if (lowerMessage.includes('‡πÇ‡∏ä‡∏ß‡πå‡∏£‡∏π‡∏°') || lowerMessage.includes('‡∏ä‡∏°')) {
      return {
        content: `‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÇ‡∏ä‡∏ß‡πå‡∏£‡∏π‡∏° TOA JOMOO! 

üìç ‡∏™‡∏≤‡∏Ç‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡πà‡∏≤‡∏ô:
‚Ä¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û: 5 ‡∏™‡∏≤‡∏Ç‡∏≤  
‚Ä¢ ‡∏õ‡∏£‡∏¥‡∏°‡∏ì‡∏ë‡∏•: 3 ‡∏™‡∏≤‡∏Ç‡∏≤
‚Ä¢ ‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î: 12 ‡∏™‡∏≤‡∏Ç‡∏≤

üïê ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î: 9:00-18:00 ‡∏ô. (‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå)

üí° ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÇ‡∏ä‡∏ß‡πå‡∏£‡∏π‡∏°:
‚úÖ ‡∏ä‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏£‡∏¥‡∏á ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ
‚úÖ ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç
‚úÖ ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ü‡∏£‡∏µ
‚úÖ ‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î

‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏±‡∏ö?`,
        suggestions: [
          { id: 'showroom-1', text: '‡∏≠‡∏¢‡∏≤‡∏Å‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ä‡∏°‡πÇ‡∏ä‡∏ß‡πå‡∏£‡∏π‡∏°', category: 'product' },
          { id: 'showroom-2', text: '‡∏Ç‡∏≠‡∏î‡∏π‡πÅ‡∏Ñ‡∏ï‡∏ï‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', category: 'product' }
        ]
      };
    }

    // Default response
    return {
      content: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ TOA JOMOO 

${context ? `‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏ô‡πÉ‡∏à ${context.productName} ‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?` : '‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö?'}

üè¢ TOA JOMOO - ‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡∏™‡∏∏‡∏Ç‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡∏à‡∏≤‡∏Å‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô
‚ú® ‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏ô‡πâ‡∏≥ ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÑ‡∏ü
üõ°Ô∏è ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢`,
      suggestions: SuggestionsService.getSuggestionsForContext(context)
    };
  }

  private static getSmartToiletRecommendations(): ProductRecommendation[] {
    return [
      {
        productId: 'st1',
        productName: 'Smart Toilet ‡∏£‡∏∏‡πà‡∏ô‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°',
        reason: '‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô',
        image: '/lovable-uploads/353d8916-0ba6-457a-95a4-cfc67b65e5f6.png',
        category: 'toilet'
      },
      {
        productId: 'st2', 
        productName: 'Smart Toilet ‡∏£‡∏∏‡πà‡∏ô‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î',
        reason: '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£',
        image: '/lovable-uploads/450f66c7-17d5-4b40-8f20-2c239481083e.png', 
        category: 'toilet'
      }
    ];
  }

  // Method for future OpenAI integration
  static async callOpenAI(message: string, context: ProductContext | null): Promise<string> {
    // This will be implemented when OpenAI API key is provided
    const prompt = context 
      ? `Context: User is viewing ${context.productName} (${context.category}). ${message}`
      : message;

    // Placeholder for actual OpenAI API call
    console.log('Would call OpenAI with prompt:', prompt);
    
    throw new Error('OpenAI API key not configured');
  }
}